# Generated by Django 3.2.9 on 2022-03-31 11:49
import logging
from django.db import migrations, models


def get_cardio_type(cardio_cluster) -> str:
    cardio_type = None
    if cardio_cluster:
        if cardio_cluster == -1:
            cardio_type = 'Failed'
        elif cardio_cluster == 0:
            cardio_type = 'Bullseye Late Maturing Turf'
        elif cardio_cluster == 1:
            cardio_type = 'Bullseye On-Pace Dirt Miler'
        elif cardio_cluster == 2:
            cardio_type = 'Bullseye Dirt Classic/Miler'
        elif cardio_cluster == 3:
            cardio_type = 'Turf/Off Speed Dirt Miler'
        elif cardio_cluster == 4:
            cardio_type = 'Bullseye Dirt Sprinter'
        elif cardio_cluster == 5:
            cardio_type = 'Late Maturing Turf Sprinter/Miler'
        elif cardio_cluster == 6:
            cardio_type = 'Australian Bullseye Turf Sprinter'
        elif cardio_cluster == 7:
            cardio_type = 'Bullseye Dirt Miler'
        elif cardio_cluster == 8:
            cardio_type = 'Euro Bullseye Turf Sprinter'
        elif cardio_cluster == 9:
            cardio_type = 'On-pace Turf Sprinter/Miler'
    return cardio_type


def update_cardio_type(apps, schema_editor):
    """set cardio_type for all relevant Measures"""
    logging.info('starting migration')
    Measure = apps.get_model('velox_app', 'Measure')
    measures = Measure.objects.all()
    for measure in measures:
        measure.cardio_type = get_cardio_type(measure.cardio_cluster)
        measure.save()
    logging.info('migration completed')


class Migration(migrations.Migration):
    dependencies = [
        ('velox_app', '0030_auto_20220502_1546'),
    ]

    operations = [
        migrations.RunPython(update_cardio_type, migrations.RunPython.noop)
    ]
