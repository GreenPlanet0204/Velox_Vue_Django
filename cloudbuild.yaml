steps:
  - id: "install Node libraries"
    name: node:14
    entrypoint: npm
    args: ['--prefix', 'velox_webapp/velox_frontend2', 'install']

  - id: "Create Vue env file"
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "VUE_APP_API_URL=/velox/api" > ./velox_webapp/velox_frontend2/.env
        echo "VUE_APP_STATIC_GCS_BUCKET=${_GCS_BUCKET_STATIC_URL}" >> ./velox_webapp/velox_frontend2/.env

  - name: node:14
    entrypoint: npm
    args: ['--prefix', 'velox_webapp/velox_frontend2', 'run', 'build']


  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args: ['cp', './velox_webapp/velox_frontend2/dist/vue_index.html', './velox_webapp/velox_backend/velox/templates/',]

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        mkdir -p ./velox_webapp/velox_backend/velox_app/static/velox/
        cp -r ./velox_webapp/velox_frontend2/dist/velox/* ./velox_webapp/velox_backend/velox_app/static/velox/
        cp -r ./velox_webapp/velox_frontend2/dist/static/velox/* ./velox_webapp/velox_backend/velox_app/static/velox/

  - id: "create env file for Django"
    name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    secretEnv: ['S_DB_USERNAME', 'S_DB_PASSWORD']
    args:
      - '-c'
      - |
        echo "DB_NAME=${_DB_NAME}" > ./velox_webapp/velox_backend/.env
        echo "DB_USERNAME=$$S_DB_USERNAME" >> ./velox_webapp/velox_backend/.env
        echo "DB_PASSWORD=$$S_DB_PASSWORD" >> ./velox_webapp/velox_backend/.env
        echo "GS_BUCKET_STATIC=${_GCS_BUCKET_STATIC}" >> ./velox_webapp/velox_backend/.env
        echo "GCS_BUCKET=${_GCS_BUCKET}" >> ./velox_webapp/velox_backend/.env
        echo "HOSTNAME=${_HOSTNAME}" >> ./velox_webapp/velox_backend/.env
        echo "ENV=${_ENV}" >> ./velox_webapp/velox_backend/.env        

  #  - id: "build image"
  #    name: "gcr.io/cloud-builders/docker"
  #    args: [ "build", "-t", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}", "./velox_webapp" ]
  #
  #  - id: "push image"
  #    name: "gcr.io/cloud-builders/docker"
  #    args: [ "push", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}" ]
  - id: "push image"
    name: 'gcr.io/kaniko-project/executor:latest'
    args:
      - --dockerfile=./velox_webapp/Dockerfile
      - --context=dir://velox_webapp
      - --destination=gcr.io/$PROJECT_ID/${_SERVICE_NAME}
      - --cache=true
      - --cache-ttl=24h

  - id: "apply migrations"
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i",
        "gcr.io/$PROJECT_ID/${_SERVICE_NAME}",
        "-s",
        "${PROJECT_ID}:${_REGION}:${_CLOUD_SQL_INSTANCE_NAME}",
        "-e", "CLOUD_BUILD=true",
        "--",
        "python",
        "manage.py",
        "migrate",
      ]
    waitFor: ['push image']

  - id: "collect static"
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i",
        "gcr.io/$PROJECT_ID/${_SERVICE_NAME}",
        "-s",
        "${PROJECT_ID}:${_REGION}:${_CLOUD_SQL_INSTANCE_NAME}",
        "-e", "CLOUD_BUILD=true",
        "--",
        "python",
        "manage.py",
        "collectstatic",
        "-i", "admin",
        "-i", "rest_framework",
        "--verbosity",
        "2",
        "--no-input",
      ]
    waitFor: ['push image']

  - id: 'cloud run deployment'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'gcloud'
    args: ['beta', 'run', 'deploy', '${_SERVICE_NAME}', '--image', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}',
           '--region', '${_REGION}', '--set-cloudsql-instances',
           '${PROJECT_ID}:${_REGION}:${_CLOUD_SQL_INSTANCE_NAME}', '--allow-unauthenticated',
           '--service-account', 'velox-webapp@velox-horse1.iam.gserviceaccount.com',
           '--memory', '1G',
           '--timeout', '60m',
           '--set-secrets', 'MJ_API_KEY=MAILJET_API_KEY:latest,MJ_API_SECRET=MAILJET_API_SECRET:latest',
    ]
    waitFor: ['push image']

  - id: 'update service traffic'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'gcloud'
    args: ['beta', 'run', 'services', 'update-traffic', '${_SERVICE_NAME}', '--to-latest',
           '--region', '${_REGION}'
    ]
    waitFor: ['cloud run deployment']

timeout: 4000s
substitutions:
  _CLOUD_SQL_INSTANCE_NAME: velox
  _REGION: us-central1
  _SERVICE_NAME: velox

options:
  machineType: 'N1_HIGHCPU_8'

#images:
#  - "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/$_DB_USERNAME_SECRET_NAME/versions/latest
      env: 'S_DB_USERNAME'
    - versionName: projects/$PROJECT_ID/secrets/$_DB_PASSWORD_SECRET_NAME/versions/latest
      env: 'S_DB_PASSWORD'